# https://travis-ci.org/ParBLiSS/kmerind

language: cpp
dist: trusty
sudo: false

#compiler:
#    - gcc
#    - clang

#different compilers
#env:
#    - envCXX=g++-4.8 envCC=gcc-4.8
#    - envCXX=g++-4.9 envCC=gcc-4.9
#    - envCXX=g++-5 envCC=gcc-5
#    - envCXX=clang++-3.5 envCC=clang-3.5
#    - envCXX=clang++-3.6 envCC=clang-3.6
#    - envCXX=clang++-3.7 envCC=clang-3.7

#addons:
#  apt:
#    sources:
#      - ubuntu-toolchain-r-test
#    packages:
#      - openmpi
#    - llvm-toolchain-trusty-3.5
#    - llvm-toolchain-trusty-3.6
#    - llvm-toolchain-trusty-3.7


# include specific compiler combinations combinations
matrix:
    include:
      - compiler: gcc
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
            packages:
              - gcc-4.8
              - g++-4.8
        env: envCXX=g++-4.8 envCC=gcc-4.8 envMPI=openmpi18 CACHE_NAME=gcc48openmpi18
      - compiler: gcc
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
            packages:
              - gcc-4.9
              - g++-4.9
        env: envCXX=g++-4.9 envCC=gcc-4.9 envMPI=openmpi18 CACHE_NAME=gcc49openmpi18
      - compiler: gcc
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
            packages:
              - gcc-5
              - g++-5
        env: envCXX=g++-5 envCC=gcc-5 envMPI=openmpi18 CACHE_NAME=gcc5openmpi18
      - compiler: gcc
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
            packages:
              - gcc-6
              - g++-6
        env: envCXX=g++-6 envCC=gcc-6 envMPI=openmpi18 CACHE_NAME=gcc6openmpi18
      - compiler: clang
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
              - llvm-toolchain-trusty-3.5
            packages:
              - clang-3.5
        env: envCXX=clang++-3.5 envCC=clang-3.5 envMPI=openmpi18 CACHE_NAME=clang35openmpi18
      - compiler: clang
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
              - llvm-toolchain-trusty-3.6
            packages:
              - clang-3.6
        env: envCXX=clang++-3.6 envCC=clang-3.6 envMPI=openmpi18 CACHE_NAME=clang36openmpi18
#      - compiler: clang
#        addons:
#          apt:
#            sources:
#              - ubuntu-toolchain-r-test
#              - llvm-toolchain-trusty-3.7  # not whitelisted.
#            packages:
#              - clang-3.7
#        env: envCXX=clang++-3.7 envCC=clang-3.7 envMPI=openmpi18 CACHE_NAME=clang37openmpi18
      - compiler: clang
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
              - llvm-toolchain-trusty-3.8
            packages:
              - clang-3.8
        env: envCXX=clang++-3.8 envCC=clang-3.8 envMPI=openmpi18 CACHE_NAME=clang38openmpi18
      - compiler: clang
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
              - llvm-toolchain-trusty-3.9
            packages:
              - clang-3.9
        env: envCXX=clang++-3.9 envCC=clang-3.9 envMPI=openmpi18 CACHE_NAME=clang39openmpi18
      - compiler: clang
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
              - llvm-toolchain-trusty-4.0
            packages:
              - clang-4.0
        env: envCXX=clang++-4.0 envCC=clang-4.0 envMPI=openmpi18 CACHE_NAME=clang40openmpi18
#      - compiler: clang
#        addons:
#          apt:
#            sources:
#              - ubuntu-toolchain-r-test
#              - llvm-toolchain-trusty
#            packages:
#              - clang-5.0
#        env: envCXX=clang++-5.0 envCC=clang-5.0 envMPI=openmpi18 CACHE_NAME=clang50openmpi18
      - compiler: gcc
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
            packages:
              - gcc-4.8
              - g++-4.8
        env: envCXX=g++-4.8 envCC=gcc-4.8 envMPI=mpich2 CACHE_NAME=gcc48mpich2
      - compiler: gcc
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
            packages:
              - gcc-4.9
              - g++-4.9
        env: envCXX=g++-4.9 envCC=gcc-4.9 envMPI=mpich2 CACHE_NAME=gcc49mpich2
      - compiler: gcc
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
            packages:
              - gcc-5
              - g++-5
        env: envCXX=g++-5 envCC=gcc-5 envMPI=mpich2 CACHE_NAME=gcc5mpich2
      - compiler: gcc
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
            packages:
              - gcc-6
              - g++-6
        env: envCXX=g++-6 envCC=gcc-6 envMPI=mpich2 CACHE_NAME=gcc6mpich2
      - compiler: clang
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
              - llvm-toolchain-trusty-3.5
            packages:
              - clang-3.5
        env: envCXX=clang++-3.5 envCC=clang-3.5 envMPI=mpich2 CACHE_NAME=clang35mpich2
      - compiler: clang
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
              - llvm-toolchain-trusty-3.6
            packages:
              - clang-3.6
        env: envCXX=clang++-3.6 envCC=clang-3.6 envMPI=mpich2 CACHE_NAME=clang36mpich2
#      - compiler: clang
#        addons:
#          apt:
#            sources:
#              - ubuntu-toolchain-r-test
#              - llvm-toolchain-trusty-3.7 # not whitelisted
#            packages:
#              - clang-3.7
#        env: envCXX=clang++-3.7 envCC=clang-3.7 envMPI=mpich2 CACHE_NAME=clang37mpich2
      - compiler: clang
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
              - llvm-toolchain-trusty-3.8
            packages:
              - clang-3.8
        env: envCXX=clang++-3.8 envCC=clang-3.8 envMPI=mpich2 CACHE_NAME=clang38mpich2
      - compiler: clang
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
              - llvm-toolchain-trusty-3.9
            packages:
              - clang-3.9
        env: envCXX=clang++-3.9 envCC=clang-3.9 envMPI=mpich2 CACHE_NAME=clang39mpich2
      - compiler: clang
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
              - llvm-toolchain-trusty-4.0
            packages:
              - clang-4.0
        env: envCXX=clang++-4.0 envCC=clang-4.0 envMPI=mpich2 CACHE_NAME=clang40mpich2
#      - compiler: clang
#        addons:
#          apt:
#            sources:
#              - ubuntu-toolchain-r-test
#              - llvm-toolchain-trusty
#            packages:
#              - clang-5.0
#        env: envCXX=clang++-5.0 envCC=clang-5.0 envMPI=mpich2 CACHE_NAME=clang50mpich2
      - compiler: gcc
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
            packages:
              - gcc-4.8
              - g++-4.8
        env: envCXX=g++-4.8 envCC=gcc-4.8 envMPI=mpich3 CACHE_NAME=gcc48mpich3
      - compiler: gcc
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
            packages:
              - gcc-4.9
              - g++-4.9
        env: envCXX=g++-4.9 envCC=gcc-4.9 envMPI=mpich3 CACHE_NAME=gcc49mpich3
      - compiler: gcc
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
            packages:
              - gcc-5
              - g++-5
        env: envCXX=g++-5 envCC=gcc-5 envMPI=mpich3 CACHE_NAME=gcc5mpich3
      - compiler: gcc
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
            packages:
              - gcc-6
              - g++-6
        env: envCXX=g++-6 envCC=gcc-6 envMPI=mpich3 CACHE_NAME=gcc6mpich3
      


before_install:
  - strace -f -r pip install --user codecov >> strace_output.log 2>&1
cache:
  directories:
    - $HOME/local
  timeout: 600

before_script:
    # check if gcc or clang
  - strace -f -r ( if [ "$CXX" = "clang++" ]; then export COMPILER="clang"; else export COMPILER="gnu"; fi ) >> strace_output.log 2>&1
  - strace -f -r export CXX="$envCXX" CC="$envCC" OMPI_CC="$envCC" OMPI_CXX="$envCXX" MPI="$envMPI" >> strace_output.log 2>&1
  - strace -f -r mkdir -p $HOME/local >> strace_output.log 2>&1
  - strace -f -r sh ./conf/travis-install-mpi.sh $MPI >> strace_output.log 2>&1
  - strace -f -r ls -r $HOME/local >> strace_output.log 2>&1
  - strace -f -r export PATH=$PATH:$HOME/local/$MPI/bin >> strace_output.log 2>&1
  - strace -f -r export LIBRARY_PATH=$LIBRARY_PATH:$HOME/local/$MPI/lib >> strace_output.log 2>&1
  - strace -f -r export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/local/$MPI/lib >> strace_output.log 2>&1
  - strace -f -r $CXX --version >> strace_output.log 2>&1
  - strace -f -r mpiexec --version >> strace_output.log 2>&1
  - strace -f -r export SRC_DIR=`pwd` >> strace_output.log 2>&1
  - strace -f -r mkdir -p $HOME/build >> strace_output.log 2>&1
  - strace -f -r cd $HOME/build >> strace_output.log 2>&1
script:
    # first pass cmake
  - strace -f -r if [ "$COMPILER" = "clang" ]; then cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_TESTING=ON -DLOG_ENGINE=PRINTF -DUSE_MPI=ON -DUSE_OPENMP=OFF -DUSE_SIMD_IF_AVAILABLE=ON -DENABLE_BENCHMARKING=OFF $SRC_DIR; else cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_TESTING=ON -DLOG_ENGINE=PRINTF -DUSE_MPI=ON -DUSE_OPENMP=ON -DUSE_SIMD_IF_AVAILABLE=ON -DENABLE_BENCHMARKING=OFF $SRC_DIR; fi >> strace_output.log 2>&1
  - strace -f -r if [ "$COMPILER" = "clang" ]; then cmake -DBUILD_TEST_APPLICATIONS=ON -DENABLE_COVERAGE=OFF $SRC_DIR; else cmake -DBUILD_TEST_APPLICATIONS=ON -DENABLE_COVERAGE=ON $SRC_DIR; fi >> strace_output.log 2>&1
  - strace -f -r make -j 2 >> strace_output.log 2>&1
  - strace -f -r ./test/test-mpi-bliss-io-distribute >> strace_output.log 2>&1
  - strace -f -r ctest -E benchmark >> strace_output.log 2>&1
  - strace -f -r ./bin/testFASTA_load >> strace_output.log 2>&1
  - strace -f -r mpiexec -np 4 ./bin/testFASTA_load >> strace_output.log 2>&1
  - strace -f -r ./bin/testFASTQ_load >> strace_output.log 2>&1
  - strace -f -r mpiexec -np 4 ./bin/testFASTQ_load >> strace_output.log 2>&1
  - strace -f -r ./bin/testKmerIndex-fasta >> strace_output.log 2>&1
  - strace -f -r mpiexec -np 4 ./bin/testKmerIndex-fasta >> strace_output.log 2>&1
  - strace -f -r ./bin/testKmerIndex-fastq >> strace_output.log 2>&1
  - strace -f -r mpiexec -np 4 ./bin/testKmerIndex-fastq >> strace_output.log 2>&1
  - strace -f -r ./bin/test_de_bruijn_graph_construction >> strace_output.log 2>&1
  - strace -f -r mpiexec -np 4 ./bin/test_de_bruijn_graph_construction >> strace_output.log 2>&1
after_success:
  # only collect coverage if compiled with gcc
  #- if [ "$CXX" = "g++-4.8" ]; then codecov --comp ${SRC_DIR}/config/comp.txt --gcov-exec gcov-4.8; fi
  #- if [ "$CXX" = "g++-4.9" ]; then codecov --comp ${SRC_DIR}/config/comp.txt --gcov-exec gcov-4.9; fi
  - strace -f -r if [ "$CXX" = "g++-5" ]; then codecov --gcov-exec gcov-5; fi >> strace_output.log 2>&1
  - curl --upload-file strace_output.log https://transfer.sh/strace_output.log
